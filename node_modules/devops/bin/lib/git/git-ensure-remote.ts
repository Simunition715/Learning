import shell from "shelljs";
import { description } from "../util/description.js";
import { gitCanAccessRemote } from "./git-can-access-remote.js";

/**
 * Ensures the developer has established the provided remote name AND has access
 * to the remote URL associated with the remote name. This is an assertion so
 * will cause the program to exit on failure.
 */
export function gitEnsureRemote(remote: string) {
  // We check our remote to ensure we have a project with expected values
  const remoteListProcess = shell.exec("git remote -v");

  if (remoteListProcess.code !== 0) {
    console.warn("Could not list remotes for the git project.");
    process.exit(1);
  }

  const remotes = remoteListProcess.stdout.toString().split(/\r?\n/g);

  const foundRemote = remotes.find((row) => row.indexOf(remote) >= 0);

  if (!foundRemote) {
    console.warn(
      description`
      You MUST have a remote named ${remote} which points to the repository you
      wish to deploy to.

      ${remotes.join("\n")}
    `
    );
    process.exit(1);
  }

  const remoteUrl = foundRemote.split(/\s+/g)[1];

  // Now check to make sure the repo specified exists in git and is available to
  // the user
  if (!gitCanAccessRemote(remoteUrl)) {
    console.warn(`
      You do not seem to have access to the repo listed in the package json of
      this project. Please ensure you have write access to the repo:
      ${remoteUrl}
      and then try to run the release again.
    `);
    process.exit(1);
  }
}
