import fs from "fs-extra";
import path from "path";
import { wait } from "../../util/wait.js";

/**
 * This performs the bundling process for distribution.
 */
export default async function run() {
  console.warn("Copying stories for use within the distribution.");
  const outputPath = path.resolve("dist/stories");
  const storiesPath = path.resolve("ui/stories");
  const distPath = path.resolve("dist");

  if (!fs.existsSync(storiesPath)) {
    console.error("Could not find stories directory.");
    return;
  }

  // Ensure the directory for the stories exists in the system
  fs.ensureDirSync(outputPath);
  // Deep copy the stories folder to the distribution
  fs.copySync(storiesPath, outputPath);

  // Get the name of this project from it's package.json
  const packageJsonPath = path.resolve("package.json");
  const projectPackage = fs.readJSONSync(packageJsonPath);

  // We now need to write a simple package.json file to the dist folder to
  // ensure the stories imports reference the same library via relative path
  // imports.
  // This corrects imports that do: from "../../.."
  const packageJson = {
    name: projectPackage.name || "unknown",
    private: true,
    main: "./ui/index.js",
    types: "./types/ui/index.d.ts",
    dependencies: {},
    repository: {},
    scripts: {},
    devDependencies: {},
  };

  fs.writeJSONSync(path.resolve(distPath, "package.json"), packageJson);

  // Let the write complete
  await wait(500);

  // Write a distribution folder called components which will simply be a
  // package json configuration that routes the import to the ui release
  fs.ensureDirSync(path.resolve(distPath, "components"));

  // Also write the package.json file to the components folder to reroute
  // component imports to the ui release distribution as well.
  // This corrects imports that do: from "../../../components"
  packageJson.main = "../ui/index.js";
  packageJson.types = "../types/ui/index.d.ts";

  fs.writeJSONSync(
    path.resolve(distPath, "components/package.json"),
    packageJson
  );

  // Let the write complete
  await wait(500);
}
