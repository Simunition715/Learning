import fs from "fs-extra";
import path from "path";
import { isDir } from "./is-dir.js";

type FileRecord<T> = { [key: string]: T | FileRecord<T> };

/**
 * Gathers file names into an object and keeps hierarchial structure
 * (a directory is an object).
 *
 * If the basePath IS a file or doesn't exist, this will just return null.
 *
 * The leaves are file names with a value of null.
 */
export function gatherFilesAsObject(
  basePath: string,
  out: FileRecord<string | null> = {}
) {
  if (!fs.existsSync(basePath) || fs.statSync(basePath).isFile()) {
    return null;
  }

  const files = fs.readdirSync(basePath);

  files.forEach((file) => {
    const filePath = path.resolve(basePath, file);

    if (isDir(filePath)) {
      const record: FileRecord<string> = {};
      out[file] = record;
      gatherFilesAsObject(filePath, record);
      return;
    }

    const fileName = path.basename(file);
    out[fileName] = null;
  });

  return out;
}
