import fs from "fs-extra";
import path from "path";
import url from "url";
import { chalk } from "../util/chalk.js";
import { openFile } from "../file-management/open-file.js";
import { paramCase } from "change-case";
import { Paths } from "./check-component-structure.js";
import { promptConfirm } from "../prompt/prompt-confirm.js";
import { Selections } from "./find-component.js";
import { wait } from "../util/wait.js";

const __dirname = url.fileURLToPath(new URL(".", import.meta.url));

/**
 * Updates the barrel file for a new category so it will be included up the
 * chain.
 */
async function updateCategoryBarrel(paths: Paths, selections: Selections) {
  const kebabName = paramCase(selections.name);
  const filePath = path.resolve(
    paths.componentsPath,
    selections.directory,
    kebabName,
    `${kebabName}.tsx`
  );

  // Get the barrel file that is the immediate parent
  const properBarrel = path.resolve(filePath, "../../../index.ts");

  // We should require the barrel to be the immediate parent.
  if (!fs.existsSync(properBarrel)) {
    console.warn(
      `Not found: ${properBarrel}`,
      "A parent barrel file for the generated category does not exist and thus this category will not be exported with the library."
    );
    return;
  }

  let barrel = fs.readFileSync(properBarrel, { encoding: "utf-8" });

  // Examine the barrel for any existing export * statements. If none exist ask
  // the user to clear the barrel for new management
  if (!barrel.includes("export * from")) {
    const doClear = await promptConfirm(`
      The barrel file for the category ${selections.directory} appears to not
      have been managed by this tool. Would you like to clear it out and start
      this file anew? If this is your first time creating a new category with
      this, it is highly likely you should answer yes.
    `);

    if (doClear) {
      barrel = "";
    }
  }

  // Clear exact same export
  barrel = barrel
    .split(`export * from "./${selections.directory}";`)
    .map((s) => s.trim())
    .join("\n");
  // Inject the export at the bottom of the barrel
  barrel = `${barrel.trim()}\nexport * from "./${selections.directory}";\n`;
  // Write the new barrel
  fs.writeFileSync(properBarrel, `${barrel.trim()}\n`, { encoding: "utf-8" });
  // Open the barrel file for review
  openFile(properBarrel);
}

/**
 * Generate the category file fragments.
 */
export async function generateCategory(paths: Paths, selections: Selections) {
  const templatePath = path.resolve(__dirname, "../template");

  console.warn(
    chalk.yellowBrightBold("Generating new category:"),
    chalk.cyanBrightBold(selections.directory)
  );

  // Create the directory
  fs.ensureDirSync(path.resolve(paths.componentsPath, selections.directory));
  // Copy the template component directory over
  fs.copySync(
    path.resolve(templatePath, "empty-component-category"),
    path.resolve(paths.componentsPath, selections.directory)
  );

  // The newly generated barrel file for the category will be immediately
  // populated with a module from this operation, so let's empty the file to
  // nothing immediately
  await wait(100);
  fs.writeFileSync(
    path.resolve(paths.componentsPath, selections.directory, "index.ts"),
    "",
    { encoding: "utf-8" }
  );

  // Make sure the barrel for categories is updated as well.
  await updateCategoryBarrel(paths, selections);
}
