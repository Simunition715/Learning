/**
 * This is a helper to establish the project has the folder structure to support
 * the component set up this devops utilizes.
 */

import fs from "fs-extra";
import path from "path";

export type Paths = {
  componentsPath: string;
  storiesComponents: string;
  storiesData: string;
};

/**
 * Ensure this project matches the requirements for generating a new component.
 */
export async function checkComponentStructure(): Promise<Paths> {
  const componentsPath = path.resolve("ui/components");
  const storiesPath = path.resolve("ui/stories");
  const storiesComponents = path.resolve(storiesPath, "components");
  const storiesData = path.resolve(storiesPath, "data");
  let fail = "";

  if (
    !fs.existsSync(componentsPath) ||
    !fs.statSync(componentsPath).isDirectory()
  ) {
    fail += `${componentsPath} not found or is not a directory\n`;
  }

  if (!fs.existsSync(storiesPath) || !fs.statSync(storiesPath).isDirectory()) {
    fail += `${storiesPath} not found or is not a directory\n`;
  }

  if (
    !fs.existsSync(storiesComponents) ||
    !fs.statSync(storiesComponents).isDirectory()
  ) {
    fail += `${storiesComponents} not found or is not a directory\n`;
  }

  if (!fs.existsSync(storiesData) || !fs.statSync(storiesData).isDirectory()) {
    fail += `${storiesData} not found or is not a directory\n`;
  }

  if (fail) {
    console.warn(fail);
    process.exit(1);
  }

  const out: Paths = {
    componentsPath,
    storiesComponents,
    storiesData,
  };

  return out;
}
