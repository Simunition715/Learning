/**
 * This performs the npm i command for the project, but this will install each
 * package one at a time and log how long it took to install each package.
 */
import fs from "fs-extra";
import path from "path";
import { chalk } from "./bin/lib/util/chalk.ts";
import { execSync } from "child_process";
import { performance } from "perf_hooks";

// eslint-disable-next-line no-undef
console.warn(`
  Profiling installing all of the packages for the project. Note: these times
  do not indicate true installation time as installing all at once has
  additional optimizations and a lot less overhead. The proposed times relative
  to each other will be indicative of potential installation time issues.


`);

async function run() {
  // Load the package.json file
  const packageJsonPath = path.resolve("package.json");
  // Convert the dependencies to npm install commands
  const packageJson = fs.readJsonSync(packageJsonPath);
  const dependencies = packageJson.dependencies;
  const devDependencies = packageJson.devDependencies;
  const allDependencies = Object.assign({}, dependencies, devDependencies);
  const dependencyNames = Object.keys(allDependencies);
  const dependencyCommands = dependencyNames.map((dependencyName) => {
    // Convert the dependency name to an npm install command WITH the exact
    // version specified in the package
    const dependencyVersion = allDependencies[dependencyName];
    return `npm i --no-save ${dependencyName}@${dependencyVersion}`;
  });

  // Run each install but perform a timing check on each one and log the time it
  // took to run.
  dependencyCommands.forEach((dependencyCommand) => {
    const startTime = performance.now();
    execSync(dependencyCommand);
    const endTime = performance.now();
    const duration = endTime - startTime;
    const splits = dependencyCommand.split(" ");

    // eslint-disable-next-line no-undef
    console.warn(
      `Installed ${splits[splits.length - 1]}: ${chalk.cyanBrightBold(
        duration
      )}ms`
    );
  });
}

run();
